using e8e14766c6a82e2f2d10623bb56bd367.Tron;

using Microsoft.Extensions.DependencyInjection;

using System;
using System.Collections.Generic;
using System.Net.Http;
using System.Threading.Tasks;

namespace e8e14766c6a82e2f2d10623bb56bd367
{
    class Program
    {
        public static async Task Main(string[] args)
        {
            var services = new ServiceCollection();
            services.AddHttpClient();

            var serviceProvider = services.BuildServiceProvider();

            var tronProtocol = new TronProtocol(
                serviceProvider.GetRequiredService<IHttpClientFactory>(),
                tronGridUri: "https://nile.trongrid.io",
                fullNodeUri: "https://api.nileex.io/wallet");

            var receivingAddressesContract = new TronReceivingAddressesContract(
                ownerAddress: "TQgLtQdRd53EDihKM4UJ8vVWksTGQtvuMc",
                ownerPrivateKey: "",
                contractAddress: "TZEPy4y6XsPFXojV61m4LjgxqNAhAWq2HH",
                contractBytecode: "608060405234801561001057600080fd5b50d3801561001d57600080fd5b50d2801561002a57600080fd5b50610a9d8061003a6000396000f3fe608060405234801561001057600080fd5b50d3801561001d57600080fd5b50d2801561002a57600080fd5b50600436106100455760003560e01c80631b56e3251461004a575b600080fd5b610064600480360381019061005f9190610547565b610066565b005b60005b8282905081101561016d57600083838381811061008957610088610902565b5b905060200201602081019061009e919061051a565b905060008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016100db91906106f6565b60206040518083038186803b1580156100f357600080fd5b505afa158015610107573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061012b91906105c1565b905061015832828473ffffffffffffffffffffffffffffffffffffffff166101879092919063ffffffff16565b505080806101659061088a565b915050610069565b503273ffffffffffffffffffffffffffffffffffffffff16ff5b6102088363a9059cbb60e01b84846040516024016101a6929190610711565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061020d565b505050565b600061026f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166102d49092919063ffffffff16565b90506000815111156102cf578080602001905181019061028f9190610594565b6102ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c59061079c565b60405180910390fd5b5b505050565b60606102e384846000856102ec565b90509392505050565b606082471015610331576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103289061075c565b60405180910390fd5b61033a85610400565b610379576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103709061077c565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516103a291906106df565b60006040518083038185875af1925050503d80600081146103df576040519150601f19603f3d011682016040523d82523d6000602084013e6103e4565b606091505b50915091506103f4828286610413565b92505050949350505050565b600080823b905060008111915050919050565b6060831561042357829050610473565b6000835111156104365782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046a919061073a565b60405180910390fd5b9392505050565b60008135905061048981610a22565b610492816107ee565b905092915050565b60008083601f8401126104b0576104af610936565b5b8235905067ffffffffffffffff8111156104cd576104cc610931565b5b6020830191508360208202830111156104e9576104e861093b565b5b9250929050565b6000815190506104ff81610a39565b92915050565b60008151905061051481610a50565b92915050565b6000602082840312156105305761052f610945565b5b600061053e8482850161047a565b91505092915050565b6000806020838503121561055e5761055d610945565b5b600083013567ffffffffffffffff81111561057c5761057b610940565b5b6105888582860161049a565b92509250509250929050565b6000602082840312156105aa576105a9610945565b5b60006105b8848285016104f0565b91505092915050565b6000602082840312156105d7576105d6610945565b5b60006105e584828501610505565b91505092915050565b6105f7816107ee565b82525050565b6000610608826107bc565b61061281856107d2565b9350610622818560208601610857565b80840191505092915050565b6000610639826107c7565b61064381856107dd565b9350610653818560208601610857565b61065c8161094a565b840191505092915050565b60006106746026836107dd565b915061067f8261095b565b604082019050919050565b6000610697601d836107dd565b91506106a2826109aa565b602082019050919050565b60006106ba602a836107dd565b91506106c5826109d3565b604082019050919050565b6106d98161084d565b82525050565b60006106eb82846105fd565b915081905092915050565b600060208201905061070b60008301846105ee565b92915050565b600060408201905061072660008301856105ee565b61073360208301846106d0565b9392505050565b60006020820190508181036000830152610754818461062e565b905092915050565b6000602082019050818103600083015261077581610667565b9050919050565b600060208201905081810360008301526107958161068a565b9050919050565b600060208201905081810360008301526107b5816106ad565b9050919050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b60006107f98261080c565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600074ffffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b8381101561087557808201518184015260208101905061085a565b83811115610884576000848401525b50505050565b60006108958261084d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156108c8576108c76108d3565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b610a2b8161082c565b8114610a3657600080fd5b50565b610a4281610800565b8114610a4d57600080fd5b50565b610a598161084d565b8114610a6457600080fd5b5056fea26474726f6e58221220fe5e6344bf1d18b5c2e65b4965f3dc33e9b8b4d572b09e57451f3cda952cde7264736f6c63430008060033",
                tronProtocol: tronProtocol);

            //var res = await tronProtocol.SendAsync(new Tron.Messages.GetTransactionInfoByBlockNumberRequest
            //{
            //    BlockNumber = 22696543
            //    //TxId = "8dfafd0b0fd4932711bcaeca7be00c44ed61412978fcdcec3b6b5ab1923edf98"
            //});

            var r = receivingAddressesContract.IssueRandomAddress();
            //var respose = await receivingAddressesContract.RequestRandomAddressAsync();
            var accumulateTx = await receivingAddressesContract.AccumulateAsync(new List<string>
            {
                "TPfxrFDYunihLr9yHjGRm4wf7MhqKr5mku"
            }, new List<string> { r.Salt }); // TXqgpQ2giGbUcLrnYbkZLfwPmzhgJyiVup

            Console.WriteLine($"Issued address: {r.Address} | {r.Salt}\n\rTransaction Id: {accumulateTx.Value}");
        }
    }
}
